[["index.html", "Dokumentation 1 Introduktion 1.1 Brug af Modellen", " Dokumentation Serkan Korkmaz, VIVE Sundhed 2022-08-26 1 Introduktion Den Sundhedsøkonomiske Investeringsmodel er finansieret af Lægemiddelindustriforeningen og er udviklet af VIVE Sundhed og VIVE Effekt under ledelse af Rasmus Højbjerg Jacobsen. 1.1 Brug af Modellen Modellen er udviklet under GPL-2 licensen, og er til fri afbenyttelse. "],["data.html", "2 Data 2.1 Databaser 2.2 Model 1 2.3 Model 2", " 2 Data 2.1 Databaser 2.2 Model 1 2.2.1 Diagnoseklassificering 2.2.2 Priserne i Modellen 2.2.2.1 Sundhedsdata Sektor Type Pris Primær Sektor Almen Praksis 140 Primær Sektor Anden Speciale 162 Primær Sektor Fysioterapi 304 Primær Sektor Psykiater 830 Primær Sektor Psykolog 596 Psykiatrien Ambulant 1987 Psykiatrien Indlæggelse 3970 Psykiatrien Skadestue 1987 Somatikken Ambulant 2891 Somatikken Indlæggelse 12201 Somatikken Skadestue 2288 Alle priserne er angivet pr. kontakt eller pr. sengedag til given ydelse. Priserne er justeret for inflation. Regneeksempel: Hvis en gruppe, i gennemsnit, har 10 sengedage i Psykiatrien, bliver disse dage altså faktureret med 3970 kr. pr. dag. Gruppen koster altså i gennemsnit 39.700 kr. i det givne år. 2.2.2.2 Overførselsindkomster Overførsel Pris Fleksjob 3913 Førtidspension 3700 Midlertidig Overførselsindkomst 2989 Selvforsørgende 9549 Alle priserne er angivet pr. uge på en given overførsel. Priserne er justeret for inflation, og er angivet i brutto-værdier. Regneeksempel: Hvis en gruppe, i gennemsnit, har 10 uger på Førtidspension, bliver denne gruppe altså faktureret med 3700 kr. pr. uge. Gruppen koster altså i gennemsnit 37.000 kr. i det givne år. 2.2.3 Populationen Populationen består af to delpopulationer der er gensidigt eksklusive. Den første delpopulation er alle danskere over 18 år der optræder i lpr med en diagnose i årrene 2009-2013. Den anden delpopulation er alle danskere over 18 år der ikke er en del af den første delpopulation. Eksempel: Hvis person A og B begge er over 18 år i årrene 2009-2013, og kun person A har den &gt;givne diagnose, er kun A altså talt med i den første population. B er således i den anden delpopulation. 2.3 Model 2 "],["applikationen.html", "3 Applikationen 3.1 Model 1", " 3 Applikationen Applikationen er udviklet i R, og bruger følgende libraries, library(shiny) library(bs4Dash) library(shinyjs) library(shinyWidgets) library(data.table) library(waiter) library(plotly) library(waiter) library(DT) library(fresh) Applikationen består af to uafhængige modeller, som her er referet som model 1, og model 2. model 1 er en målgruppemodel, der sammenligner to sygdomsgrupper på tværs forskellige outcomes over tid. model 2 er en børnemodel, der sammenligner to målgrupper på tværs af forskellige outcomes Bemærk: Grundet diskretioneringsregler jf. GDPR, er alle gruppering med under 10 observertioner maskeret. Det kan derfor hænde at en sammenligning ikke er mulig. Modellerne vil gøre jer &gt;opmærksom på dette. 3.1 Model 1 Modellen har 3 primære mål. Gennemsnitsværiden \\(\\mu_{1,t}\\), \\(\\mu_{2,t}\\) og \\(\\mu_{3,t}\\) for henholdsvis den valgte gruppe, sammenligningsgruppen og den kontrafaktiske værdi for den valgte gruppe. Den kontrafaktiske værdi er beregnet som følger, \\[ \\mu_{3,t} = \\mu_{1,t}-(\\mu_{1,t} - \\mu_{2,t}) \\times \\alpha_t \\] Hvor \\(\\alpha_t \\in ]0,1[\\) er den forventede procentvise effekt. 3.1.1 Output Modellen har tre outcomes på tværs af 4 områder, som er angivet i reale og monetære værdier justeret for inflation. ydelser i den primære sektor sengedage i den sekundære sektor antal uger på en given overførselsindkomst Udgifter til uspecificerede præparater 3.1.2 Input Modellen tager to forskellige inputs, som er beskrevet som følger, 3.1.2.1 Forventet Effekt Det primære input er de forventede procentvise ændringer over tid, relativt til den valgte sammenligningsgruppe. Effekten er beregnet efter følgende formel \\[ (\\mu_{1,t} - \\mu_{2,t}) \\times \\alpha_t \\] Hvor \\(\\mu_{1,t}\\) og \\(\\mu_{2,t}\\) henholdsvis er den valgte og sammenligningsgruppens gennemsnitlige værdi i tid, \\(t\\). \\(\\alpha_t\\) er den forventede procentvise effekt i tid, \\(t\\). 3.1.2.2 Parametre Der er to typer af parametre i modellen. Beskrivende, og filtrerende. Filtrerende parametre er i klassen af ja/nej valgmuligheder som ændrer populationen derefter. De beskrivende parametre er identificerende parametre der kendetegner undergrupperne fra den valgte population. Alle disse parametre er fyldestgørende, hvorfor tilvalg/fravalg af alle valg giver den oprindelige population. Eksempel: Hvis man vælger aldersgruppen 18-49 år blandt incidente patienter, er det således kun denne &gt;gruppe man kigger på. Og resultaterne er kun gældende for denne gruppe. Vælger man derimod &gt;alle aldersgrupper, eller fjerner alle aldersgrupper, er man tilbage til hele populationen af &gt;incidente patienter.´ "],["for-udviklere.html", "4 For Udviklere 4.1 Indlæsning af eget data 4.2 Videreudvikling af Modellen", " 4 For Udviklere Dette afsnit beskriver brugen af modellens funktioner, og dets videre udvikling. Alle funktioner kan modificeres efter behov, og det er muligt at uploade egen data og få modellen til at beregne derefter. Hvis det skønnes at diverse optimeringer gør modellen generelt bedre, er I velkomne til at lave en pull-request som vil blive reviewet af undertegnede. preload_data forventer at finde data i mappen input/modelX og indlæser dette some en named list. data skal være i wide-format. 4.1 Indlæsning af eget data For model 1 og model 2 er 3 typer variabler. Tid (model 1) Socioøkonomiske Variabler (model 1 og model 2) Outcomes (model 1 og model 2) Assignment (model 1 og model 2) Allocator (model 1 og model 2) Alle variabler bør navngives efter brug og som as.charcters ved brug af fcase eller case_when. Dette vil sige at, eksempelvis, arbejdsmarkedsforhold bør navngives som Arbejdsløs, Fleksjob osv. DT[ , arbejdsmarked := fcase( tmp == 1, &#39;Fleksjob&#39;, default, &#39;Aktiv i Arbejdsmarkedet&#39; ) , ] 4.1.1 preload_data data bør følge struktur foroven, med mindre det er tiltænkt at skrive preload_data() og størstedelen af de afhængige scripts om. Hvis eget data fødes i modellen, med variabler forskellige fra de, der allerede er indarbejdet i modellerne, skal argumenterne i preload_data() skrives om derefter. Hvis data inkluderer nye variabler som, DT[ , `:=`( statsborgerskab = fcase( tmp == 1, &#39;Udenlandsk&#39;, default, &#39;Dansk&#39; ), indkomst_gruppe = fcase( indkomst &gt; 1000, &#39;Høj&#39;, indkomest &gt; 500 &amp; indkomst &lt; 1000, &#39;Mellem&#39;, default = &#39;Lav&#39; ) ) , ] Så skal argumentet char_vector i preload_data() skrives om til char_vector = c(..., 'statsborgerskab', 'indkomst_gruppe') hvor ... repræsenterer andre eksisterende karakteristika der er at finde i data. Det er ikke nødvendigt at angive hvilke outcome variabler der er, så længe alle andre variabler er angivet. 4.1.2 Navnekonventioner Hvis disse ikke overholdes kan modellen ikke køre. data skal indeholde assignment, allocator og year. assignment og allocator fungerer som over- og undergrupperinger og skal angives som character. Hvis assignment = c('A', 'B') og allocator = c('a', 'b'), er disse altså cross-joins af hinanden. 4.2 Videreudvikling af Modellen Det er tilladt at videreudvikle på modellen såfremt det overholder GPL 2 retningslinierne. Dette indebærer først og fremmest, at den videreudviklede model bliver lagt op som open-source på eksempelvis Github med rette henvisninger. Alternativt kan modellen videreudvikles på i det eksisterende repository ved at lave en pull request. Det er dog forventet at udviklere bruger data.table og plotly som det primære værktøj til behandling af data og grafer. Hvis man ikke kan imødekomme dette, vil alle pull requests blive afvist uden videre begrundelse. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
